18c18
<     double dealer_prob[7], ev_stand, ev_hit, ev_double, ev_split, ev_surrender;
---
>     double dealer_prob[7], ev_stand, ev_hit, ev_double, ev_split;
23d22
<     ev_surrender = -0.5;
99c98
<                     max_ev = max2(max2(max2(ev_hit,ev_stand), max2(ev_double, ev_split)),ev_surrender);
---
>                     max_ev = max2(max2(ev_hit,ev_stand), max2(ev_double, ev_split));
106,107d104
<                     else if (max_ev==ev_split)
<                         basic_strategy[pc1][pc2][upcard] = 4;
109c106
<                         basic_strategy[pc1][pc2][upcard] = 5;
---
>                         basic_strategy[pc1][pc2][upcard] = 4;
128c125
<         char codes[]="XSHDPR";
---
>         char codes[]="XSHDP";
262,263d258
< 
< 
293,337c288
<     if (old_tot == 1) // for dealer ace upcard, hole card cannot be a ten value card
<     {
<         for (next_card = 1; next_card <= 9; next_card++)
<         {
<             prob *= (double)deck[next_card] / ((double)deck[0]-double(deck[10]));
<             deck[next_card]--;
<             deck[0]--;
<             new_tot = old_tot + next_card;
<             new_ace = old_ace + (next_card == 1 ? 1 : 0);
<             if (new_tot > 21)
<                 dealer_prob[6] += prob;
<             else if (new_tot >= 17)
<                 dealer_prob[new_tot -17] += prob;
<             else if ((new_tot >= 8) && (new_tot<=11) && (new_ace > 0)) // new_tot >= 7 for S17
<                 dealer_prob[new_tot - 7] += prob;
<             else
<                 dealer(new_tot, new_ace, cards + 1, prob, deck, dealer_prob);
<             deck[0]++;
<             deck[next_card]++;
<             prob /= (double)deck[next_card] / ((double)deck[0]-double(deck[10]));
<         }
<     }
<     else if (old_tot == 10) // for dealer ten upcard, hole card cannot be an ace
<     {
<         for (next_card = 2; next_card <= 10; next_card++)
<         {
<             prob *= (double)deck[next_card] / ((double)deck[0]-double(deck[1]));
<             deck[next_card]--;
<             deck[0]--;
<             new_tot = old_tot + next_card;
<             new_ace = old_ace + (next_card == 1 ? 1 : 0);
<             if (new_tot > 21)
<                 dealer_prob[6] += prob;
<             else if (new_tot >= 17)
<                 dealer_prob[new_tot -17] += prob;
<             else if ((new_tot >= 8) && (new_tot<=11) && (new_ace > 0)) // new_tot >= 7 for S17
<                 dealer_prob[new_tot - 7] += prob;
<             else
<                 dealer(new_tot, new_ace, cards + 1, prob, deck, dealer_prob);
<             deck[0]++;
<             deck[next_card]++;
<             prob /= (double)deck[next_card] / ((double)deck[0]-double(deck[1]));
<         }
<     }
<     else
---
>     for (next_card = 1; next_card <= 10; next_card++)
339,357c290,307
<         for (next_card = 1; next_card <= 10; next_card++)
<         {
<             prob *= (double)deck[next_card] / (double)deck[0];
<             deck[next_card]--;
<             deck[0]--;
<             new_tot = old_tot + next_card;
<             new_ace = old_ace + (next_card == 1 ? 1 : 0);
<             if (new_tot > 21)
<                 dealer_prob[6] += prob;
<             else if (new_tot >= 17)
<                 dealer_prob[new_tot -17] += prob;
<             else if ((new_tot >= 8) && (new_tot<=11) && (new_ace > 0)) // new_tot >= 7 for S17
<                 dealer_prob[new_tot - 7] += prob;
<             else
<                 dealer(new_tot, new_ace, cards + 1, prob, deck, dealer_prob);
<             deck[0]++;
<             deck[next_card]++;
<             prob /= (double)deck[next_card] / (double)deck[0];
<         }
---
>         prob *= (double)deck[next_card] / (double)deck[0];
>         deck[next_card]--;
>         deck[0]--;
>         new_tot = old_tot + next_card;
>         new_ace = old_ace + (next_card == 1 ? 1 : 0);
>         if ((cards==1) && (new_tot==11) && (new_ace == 1)) // blackjack}}
>             dealer_prob[5] += prob;
>         else if (new_tot > 21)
>             dealer_prob[6] += prob;
>         else if (new_tot >= 17)
>             dealer_prob[new_tot -17] += prob;
>         else if ((new_tot >= 7) && (new_tot<=11) && (new_ace > 0))
>             dealer_prob[new_tot - 7] += prob;
>         else
>             dealer(new_tot, new_ace, cards + 1, prob, deck, dealer_prob);
>         deck[0]++;
>         deck[next_card]++;
>         prob /= (double)deck[next_card] / (double)deck[0];
